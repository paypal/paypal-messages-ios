skip_docs
default_platform(:ios)

platform :ios do

    desc "Runs tests & code coverage check"
    lane :tests do
        sh "brew install xcodes"
        xcodes(version: "14.2")

        scan(
            workspace: "PayPalMessages.xcworkspace",
            scheme: "PayPalMessagesTests",
            devices: ["iPhone 14"],
            derived_data_path: "~/Library/Developer/Xcode/DerivedData",
            skip_build: true,
            result_bundle: true,
            code_coverage: true
        )

        # Ensure the code coverage directory is empty before creating new coverage
        sh "rm -rf coverage"

        xcov(
            workspace: "PayPalMessages.xcworkspace",
            scheme: "PayPalMessagesTests",
            derived_data_path: "~/Library/Developer/Xcode/DerivedData",
            output_directory: "fastlane/coverage",
            markdown_report: true,
            minimum_coverage_percentage: 80.0
        )
    end

    desc "Runs SwiftLint and returns any unmet warnings or errors"
    lane :lint do
        sh "brew install xcodes"
        xcodes(version: "14.2")

        swiftlint(
            mode: :lint,
            raise_if_swiftlint_error: true,
            strict: true,
            reporter: "github-actions-logging",
            quiet: true
        )
    end

    lane :build do
        sh "brew install xcodes"
        xcodes(version: "14.2")

        pod_lib_lint
    end

    desc "Update version number in various files"
    lane :release do |options|
        if options[:version] 
            # Update the hardcoded version string in the Swift code 
            sh "BUILD_INFO_PATH=$(find .. -name 'BuildInfo.swift')"
            sh "sed -i.bak -E 's/version(.*) = \"[0-9a-zA-Z.-]+\"/version\1 = \"#{options[:version]}\"/' $BUILD_INFO_PATH"
            sh "rm $BUILD_INFO_PATH.bak"

            # Update the version in the podspec file
            version_bump_podspec(
               path: "../PayPalMessages.podspec",
               version_number: options[:version]
            )
        end
    end

    desc "Sync develop with main branch"
    lane :sync do
        push_to_git_remote(
            local_branch: "main",
            remote_branch: "develop"
        )
    end

    lane :publish do
      pod_push(path: "PayPalMessages.podspec")
    end
end
